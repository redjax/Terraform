---
name: Manage GitHub Repository

on:
  workflow_dispatch:
    inputs:
      repo-name:
        description: 'Repository name'
        required: true
        type: string
      repo-description:
        description: 'Repository description'
        required: false
        default: 'This repository was provisioned with Terraform without a description.'
        type: string
      auto-init:
        description: 'Auto initialize repository with README and main branch'
        required: false
        default: true
        type: boolean
      additional-branches:
        description: 'Optional branches list (e.g., ''["dev","docs"]'')'
        required: false
        default: ''
        type: string
      github-owner:
        description: 'GitHub organization or user'
        required: false
        default: 'redjax'
        type: string
      visibility:
        description: 'Public or private visibility'
        required: false
        default: 'private'
        type: choice
        options:
          - private
          - public
      destroy:
        description: 'Perform destroy instead of deploy'
        required: false
        default: false
        type: boolean

jobs:
  plan:
    runs-on: ubuntu-latest
    environment: github_repo_plan

    steps:
      - uses: actions/checkout@v5

      - name: Terragrunt Plan
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_version: latest
          tofu_version: latest
          tg_dir: environments/github/repos/BasicRepository
          tg_command: |
            terragrunt run -- sh -c 'if [ "${{ github.event.inputs.destroy }}" = "true" ]; then terragrunt plan -destroy; else terragrunt plan; fi'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_SECRET_ACCESS_KEY }}
          AWS_REQUEST_CHECKSUM_CALCULATION: when_required
          AWS_RESPONSE_CHECKSUM_VALIDATION: when_required
          TF_VAR_repository_name: ${{ github.event.inputs.repo-name }}
          TF_VAR_repository_description: ${{ github.event.inputs.repo-description }}
          TF_VAR_repository_auto_init: ${{ github.event.inputs.auto-init }}
          TF_VAR_additional_branches: ${{ github.event.inputs.additional-branches }}
          TF_VAR_github_owner: ${{ github.event.inputs.github-owner }}
          TF_VAR_github_token: ${{ secrets.GH_PAT }}
          TF_VAR_visibility: ${{ github.event.inputs.visibility }}

  apply:
    runs-on: ubuntu-latest
    needs: plan
    environment: github_repo_deployment

    steps:
      - uses: actions/checkout@v5

      - name: Terragrunt Apply or Destroy
        uses: gruntwork-io/terragrunt-action@v3
        with:
          tg_version: latest
          tofu_version: latest
          tg_dir: ./environments/github/repos/BasicRepository
          tg_command: |
            terragrunt run -- sh -c 'if [ "${{ github.event.inputs.destroy }}" = "true" ]; then terragrunt destroy -auto-approve; else terragrunt apply -auto-approve; fi'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_SECRET_ACCESS_KEY }}
          AWS_REQUEST_CHECKSUM_CALCULATION: when_required
          AWS_RESPONSE_CHECKSUM_VALIDATION: when_required
          TF_VAR_repository_name: ${{ github.event.inputs.repo-name }}
          TF_VAR_repository_description: ${{ github.event.inputs.repo-description }}
          TF_VAR_repository_auto_init: ${{ github.event.inputs.auto-init }}
          TF_VAR_additional_branches: ${{ github.event.inputs.additional-branches }}
          TF_VAR_github_owner: ${{ github.event.inputs.github-owner }}
          TF_VAR_github_token: ${{ secrets.GH_PAT }}
          TF_VAR_visibility: ${{ github.event.inputs.visibility }}
